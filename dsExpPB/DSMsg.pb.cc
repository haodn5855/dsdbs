// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: DSMsg.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "DSMsg.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* SysInterfaceStruct_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SysInterfaceStruct_reflection_ = NULL;
const ::google::protobuf::Descriptor* InterfaceSelectReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  InterfaceSelectReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* InterfaceSelectAck_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  InterfaceSelectAck_reflection_ = NULL;
const ::google::protobuf::Descriptor* InterfaceInsertReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  InterfaceInsertReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* InterfaceInsertAck_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  InterfaceInsertAck_reflection_ = NULL;
const ::google::protobuf::Descriptor* InterfaceUpdateReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  InterfaceUpdateReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* InterfaceUpdateAck_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  InterfaceUpdateAck_reflection_ = NULL;
const ::google::protobuf::Descriptor* InterfaceDeleteReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  InterfaceDeleteReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* InterfaceDeleteAck_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  InterfaceDeleteAck_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_DSMsg_2eproto() {
  protobuf_AddDesc_DSMsg_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "DSMsg.proto");
  GOOGLE_CHECK(file != NULL);
  SysInterfaceStruct_descriptor_ = file->message_type(0);
  static const int SysInterfaceStruct_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SysInterfaceStruct, interfaceid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SysInterfaceStruct, dssvrid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SysInterfaceStruct, ifname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SysInterfaceStruct, ifpath_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SysInterfaceStruct, isenable_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SysInterfaceStruct, desccomment_),
  };
  SysInterfaceStruct_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SysInterfaceStruct_descriptor_,
      SysInterfaceStruct::default_instance_,
      SysInterfaceStruct_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SysInterfaceStruct, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SysInterfaceStruct, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SysInterfaceStruct));
  InterfaceSelectReq_descriptor_ = file->message_type(1);
  static const int InterfaceSelectReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InterfaceSelectReq, dssvrid_),
  };
  InterfaceSelectReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      InterfaceSelectReq_descriptor_,
      InterfaceSelectReq::default_instance_,
      InterfaceSelectReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InterfaceSelectReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InterfaceSelectReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(InterfaceSelectReq));
  InterfaceSelectAck_descriptor_ = file->message_type(2);
  static const int InterfaceSelectAck_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InterfaceSelectAck, cfgitems_),
  };
  InterfaceSelectAck_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      InterfaceSelectAck_descriptor_,
      InterfaceSelectAck::default_instance_,
      InterfaceSelectAck_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InterfaceSelectAck, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InterfaceSelectAck, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(InterfaceSelectAck));
  InterfaceInsertReq_descriptor_ = file->message_type(3);
  static const int InterfaceInsertReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InterfaceInsertReq, cfgitems_),
  };
  InterfaceInsertReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      InterfaceInsertReq_descriptor_,
      InterfaceInsertReq::default_instance_,
      InterfaceInsertReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InterfaceInsertReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InterfaceInsertReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(InterfaceInsertReq));
  InterfaceInsertAck_descriptor_ = file->message_type(4);
  static const int InterfaceInsertAck_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InterfaceInsertAck, ret_),
  };
  InterfaceInsertAck_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      InterfaceInsertAck_descriptor_,
      InterfaceInsertAck::default_instance_,
      InterfaceInsertAck_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InterfaceInsertAck, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InterfaceInsertAck, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(InterfaceInsertAck));
  InterfaceUpdateReq_descriptor_ = file->message_type(5);
  static const int InterfaceUpdateReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InterfaceUpdateReq, cfgitems_),
  };
  InterfaceUpdateReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      InterfaceUpdateReq_descriptor_,
      InterfaceUpdateReq::default_instance_,
      InterfaceUpdateReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InterfaceUpdateReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InterfaceUpdateReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(InterfaceUpdateReq));
  InterfaceUpdateAck_descriptor_ = file->message_type(6);
  static const int InterfaceUpdateAck_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InterfaceUpdateAck, ret_),
  };
  InterfaceUpdateAck_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      InterfaceUpdateAck_descriptor_,
      InterfaceUpdateAck::default_instance_,
      InterfaceUpdateAck_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InterfaceUpdateAck, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InterfaceUpdateAck, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(InterfaceUpdateAck));
  InterfaceDeleteReq_descriptor_ = file->message_type(7);
  static const int InterfaceDeleteReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InterfaceDeleteReq, cfgitems_),
  };
  InterfaceDeleteReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      InterfaceDeleteReq_descriptor_,
      InterfaceDeleteReq::default_instance_,
      InterfaceDeleteReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InterfaceDeleteReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InterfaceDeleteReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(InterfaceDeleteReq));
  InterfaceDeleteAck_descriptor_ = file->message_type(8);
  static const int InterfaceDeleteAck_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InterfaceDeleteAck, ret_),
  };
  InterfaceDeleteAck_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      InterfaceDeleteAck_descriptor_,
      InterfaceDeleteAck::default_instance_,
      InterfaceDeleteAck_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InterfaceDeleteAck, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InterfaceDeleteAck, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(InterfaceDeleteAck));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_DSMsg_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SysInterfaceStruct_descriptor_, &SysInterfaceStruct::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    InterfaceSelectReq_descriptor_, &InterfaceSelectReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    InterfaceSelectAck_descriptor_, &InterfaceSelectAck::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    InterfaceInsertReq_descriptor_, &InterfaceInsertReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    InterfaceInsertAck_descriptor_, &InterfaceInsertAck::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    InterfaceUpdateReq_descriptor_, &InterfaceUpdateReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    InterfaceUpdateAck_descriptor_, &InterfaceUpdateAck::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    InterfaceDeleteReq_descriptor_, &InterfaceDeleteReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    InterfaceDeleteAck_descriptor_, &InterfaceDeleteAck::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_DSMsg_2eproto() {
  delete SysInterfaceStruct::default_instance_;
  delete SysInterfaceStruct_reflection_;
  delete InterfaceSelectReq::default_instance_;
  delete InterfaceSelectReq_reflection_;
  delete InterfaceSelectAck::default_instance_;
  delete InterfaceSelectAck_reflection_;
  delete InterfaceInsertReq::default_instance_;
  delete InterfaceInsertReq_reflection_;
  delete InterfaceInsertAck::default_instance_;
  delete InterfaceInsertAck_reflection_;
  delete InterfaceUpdateReq::default_instance_;
  delete InterfaceUpdateReq_reflection_;
  delete InterfaceUpdateAck::default_instance_;
  delete InterfaceUpdateAck_reflection_;
  delete InterfaceDeleteReq::default_instance_;
  delete InterfaceDeleteReq_reflection_;
  delete InterfaceDeleteAck::default_instance_;
  delete InterfaceDeleteAck_reflection_;
}

void protobuf_AddDesc_DSMsg_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\013DSMsg.proto\"\201\001\n\022SysInterfaceStruct\022\023\n\013"
    "InterfaceID\030\001 \001(\005\022\017\n\007DSSVRID\030\002 \001(\005\022\016\n\006IF"
    "Name\030\003 \001(\t\022\016\n\006IFPath\030\004 \001(\t\022\020\n\010IsEnable\030\005"
    " \001(\005\022\023\n\013DescComment\030\006 \001(\t\"%\n\022InterfaceSe"
    "lectReq\022\017\n\007DSSVRID\030\002 \001(\005\";\n\022InterfaceSel"
    "ectAck\022%\n\010CfgItems\030\002 \003(\0132\023.SysInterfaceS"
    "truct\";\n\022InterfaceInsertReq\022%\n\010CfgItems\030"
    "\002 \003(\0132\023.SysInterfaceStruct\"!\n\022InterfaceI"
    "nsertAck\022\013\n\003Ret\030\002 \001(\005\";\n\022InterfaceUpdate"
    "Req\022%\n\010CfgItems\030\002 \003(\0132\023.SysInterfaceStru"
    "ct\"!\n\022InterfaceUpdateAck\022\013\n\003Ret\030\002 \001(\005\";\n"
    "\022InterfaceDeleteReq\022%\n\010CfgItems\030\002 \003(\0132\023."
    "SysInterfaceStruct\"!\n\022InterfaceDeleteAck"
    "\022\013\n\003Ret\030\002 \001(\005", 533);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "DSMsg.proto", &protobuf_RegisterTypes);
  SysInterfaceStruct::default_instance_ = new SysInterfaceStruct();
  InterfaceSelectReq::default_instance_ = new InterfaceSelectReq();
  InterfaceSelectAck::default_instance_ = new InterfaceSelectAck();
  InterfaceInsertReq::default_instance_ = new InterfaceInsertReq();
  InterfaceInsertAck::default_instance_ = new InterfaceInsertAck();
  InterfaceUpdateReq::default_instance_ = new InterfaceUpdateReq();
  InterfaceUpdateAck::default_instance_ = new InterfaceUpdateAck();
  InterfaceDeleteReq::default_instance_ = new InterfaceDeleteReq();
  InterfaceDeleteAck::default_instance_ = new InterfaceDeleteAck();
  SysInterfaceStruct::default_instance_->InitAsDefaultInstance();
  InterfaceSelectReq::default_instance_->InitAsDefaultInstance();
  InterfaceSelectAck::default_instance_->InitAsDefaultInstance();
  InterfaceInsertReq::default_instance_->InitAsDefaultInstance();
  InterfaceInsertAck::default_instance_->InitAsDefaultInstance();
  InterfaceUpdateReq::default_instance_->InitAsDefaultInstance();
  InterfaceUpdateAck::default_instance_->InitAsDefaultInstance();
  InterfaceDeleteReq::default_instance_->InitAsDefaultInstance();
  InterfaceDeleteAck::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_DSMsg_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_DSMsg_2eproto {
  StaticDescriptorInitializer_DSMsg_2eproto() {
    protobuf_AddDesc_DSMsg_2eproto();
  }
} static_descriptor_initializer_DSMsg_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int SysInterfaceStruct::kInterfaceIDFieldNumber;
const int SysInterfaceStruct::kDSSVRIDFieldNumber;
const int SysInterfaceStruct::kIFNameFieldNumber;
const int SysInterfaceStruct::kIFPathFieldNumber;
const int SysInterfaceStruct::kIsEnableFieldNumber;
const int SysInterfaceStruct::kDescCommentFieldNumber;
#endif  // !_MSC_VER

SysInterfaceStruct::SysInterfaceStruct()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SysInterfaceStruct)
}

void SysInterfaceStruct::InitAsDefaultInstance() {
}

SysInterfaceStruct::SysInterfaceStruct(const SysInterfaceStruct& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SysInterfaceStruct)
}

void SysInterfaceStruct::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  interfaceid_ = 0;
  dssvrid_ = 0;
  ifname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ifpath_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  isenable_ = 0;
  desccomment_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SysInterfaceStruct::~SysInterfaceStruct() {
  // @@protoc_insertion_point(destructor:SysInterfaceStruct)
  SharedDtor();
}

void SysInterfaceStruct::SharedDtor() {
  if (ifname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete ifname_;
  }
  if (ifpath_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete ifpath_;
  }
  if (desccomment_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete desccomment_;
  }
  if (this != default_instance_) {
  }
}

void SysInterfaceStruct::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SysInterfaceStruct::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SysInterfaceStruct_descriptor_;
}

const SysInterfaceStruct& SysInterfaceStruct::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_DSMsg_2eproto();
  return *default_instance_;
}

SysInterfaceStruct* SysInterfaceStruct::default_instance_ = NULL;

SysInterfaceStruct* SysInterfaceStruct::New() const {
  return new SysInterfaceStruct;
}

void SysInterfaceStruct::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<SysInterfaceStruct*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 63) {
    ZR_(interfaceid_, dssvrid_);
    if (has_ifname()) {
      if (ifname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        ifname_->clear();
      }
    }
    if (has_ifpath()) {
      if (ifpath_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        ifpath_->clear();
      }
    }
    isenable_ = 0;
    if (has_desccomment()) {
      if (desccomment_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        desccomment_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SysInterfaceStruct::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SysInterfaceStruct)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 InterfaceID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &interfaceid_)));
          set_has_interfaceid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_DSSVRID;
        break;
      }

      // optional int32 DSSVRID = 2;
      case 2: {
        if (tag == 16) {
         parse_DSSVRID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dssvrid_)));
          set_has_dssvrid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_IFName;
        break;
      }

      // optional string IFName = 3;
      case 3: {
        if (tag == 26) {
         parse_IFName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ifname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->ifname().data(), this->ifname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ifname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_IFPath;
        break;
      }

      // optional string IFPath = 4;
      case 4: {
        if (tag == 34) {
         parse_IFPath:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ifpath()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->ifpath().data(), this->ifpath().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ifpath");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_IsEnable;
        break;
      }

      // optional int32 IsEnable = 5;
      case 5: {
        if (tag == 40) {
         parse_IsEnable:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &isenable_)));
          set_has_isenable();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_DescComment;
        break;
      }

      // optional string DescComment = 6;
      case 6: {
        if (tag == 50) {
         parse_DescComment:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_desccomment()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->desccomment().data(), this->desccomment().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "desccomment");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SysInterfaceStruct)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SysInterfaceStruct)
  return false;
#undef DO_
}

void SysInterfaceStruct::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SysInterfaceStruct)
  // optional int32 InterfaceID = 1;
  if (has_interfaceid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->interfaceid(), output);
  }

  // optional int32 DSSVRID = 2;
  if (has_dssvrid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->dssvrid(), output);
  }

  // optional string IFName = 3;
  if (has_ifname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ifname().data(), this->ifname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ifname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->ifname(), output);
  }

  // optional string IFPath = 4;
  if (has_ifpath()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ifpath().data(), this->ifpath().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ifpath");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->ifpath(), output);
  }

  // optional int32 IsEnable = 5;
  if (has_isenable()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->isenable(), output);
  }

  // optional string DescComment = 6;
  if (has_desccomment()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->desccomment().data(), this->desccomment().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "desccomment");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->desccomment(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SysInterfaceStruct)
}

::google::protobuf::uint8* SysInterfaceStruct::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SysInterfaceStruct)
  // optional int32 InterfaceID = 1;
  if (has_interfaceid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->interfaceid(), target);
  }

  // optional int32 DSSVRID = 2;
  if (has_dssvrid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->dssvrid(), target);
  }

  // optional string IFName = 3;
  if (has_ifname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ifname().data(), this->ifname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ifname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->ifname(), target);
  }

  // optional string IFPath = 4;
  if (has_ifpath()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ifpath().data(), this->ifpath().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ifpath");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->ifpath(), target);
  }

  // optional int32 IsEnable = 5;
  if (has_isenable()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->isenable(), target);
  }

  // optional string DescComment = 6;
  if (has_desccomment()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->desccomment().data(), this->desccomment().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "desccomment");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->desccomment(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SysInterfaceStruct)
  return target;
}

int SysInterfaceStruct::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 InterfaceID = 1;
    if (has_interfaceid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->interfaceid());
    }

    // optional int32 DSSVRID = 2;
    if (has_dssvrid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dssvrid());
    }

    // optional string IFName = 3;
    if (has_ifname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->ifname());
    }

    // optional string IFPath = 4;
    if (has_ifpath()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->ifpath());
    }

    // optional int32 IsEnable = 5;
    if (has_isenable()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->isenable());
    }

    // optional string DescComment = 6;
    if (has_desccomment()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->desccomment());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SysInterfaceStruct::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SysInterfaceStruct* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SysInterfaceStruct*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SysInterfaceStruct::MergeFrom(const SysInterfaceStruct& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_interfaceid()) {
      set_interfaceid(from.interfaceid());
    }
    if (from.has_dssvrid()) {
      set_dssvrid(from.dssvrid());
    }
    if (from.has_ifname()) {
      set_ifname(from.ifname());
    }
    if (from.has_ifpath()) {
      set_ifpath(from.ifpath());
    }
    if (from.has_isenable()) {
      set_isenable(from.isenable());
    }
    if (from.has_desccomment()) {
      set_desccomment(from.desccomment());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SysInterfaceStruct::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SysInterfaceStruct::CopyFrom(const SysInterfaceStruct& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SysInterfaceStruct::IsInitialized() const {

  return true;
}

void SysInterfaceStruct::Swap(SysInterfaceStruct* other) {
  if (other != this) {
    std::swap(interfaceid_, other->interfaceid_);
    std::swap(dssvrid_, other->dssvrid_);
    std::swap(ifname_, other->ifname_);
    std::swap(ifpath_, other->ifpath_);
    std::swap(isenable_, other->isenable_);
    std::swap(desccomment_, other->desccomment_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SysInterfaceStruct::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SysInterfaceStruct_descriptor_;
  metadata.reflection = SysInterfaceStruct_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int InterfaceSelectReq::kDSSVRIDFieldNumber;
#endif  // !_MSC_VER

InterfaceSelectReq::InterfaceSelectReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:InterfaceSelectReq)
}

void InterfaceSelectReq::InitAsDefaultInstance() {
}

InterfaceSelectReq::InterfaceSelectReq(const InterfaceSelectReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:InterfaceSelectReq)
}

void InterfaceSelectReq::SharedCtor() {
  _cached_size_ = 0;
  dssvrid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

InterfaceSelectReq::~InterfaceSelectReq() {
  // @@protoc_insertion_point(destructor:InterfaceSelectReq)
  SharedDtor();
}

void InterfaceSelectReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void InterfaceSelectReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InterfaceSelectReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return InterfaceSelectReq_descriptor_;
}

const InterfaceSelectReq& InterfaceSelectReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_DSMsg_2eproto();
  return *default_instance_;
}

InterfaceSelectReq* InterfaceSelectReq::default_instance_ = NULL;

InterfaceSelectReq* InterfaceSelectReq::New() const {
  return new InterfaceSelectReq;
}

void InterfaceSelectReq::Clear() {
  dssvrid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool InterfaceSelectReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:InterfaceSelectReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 DSSVRID = 2;
      case 2: {
        if (tag == 16) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dssvrid_)));
          set_has_dssvrid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:InterfaceSelectReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:InterfaceSelectReq)
  return false;
#undef DO_
}

void InterfaceSelectReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:InterfaceSelectReq)
  // optional int32 DSSVRID = 2;
  if (has_dssvrid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->dssvrid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:InterfaceSelectReq)
}

::google::protobuf::uint8* InterfaceSelectReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:InterfaceSelectReq)
  // optional int32 DSSVRID = 2;
  if (has_dssvrid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->dssvrid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:InterfaceSelectReq)
  return target;
}

int InterfaceSelectReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 DSSVRID = 2;
    if (has_dssvrid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dssvrid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InterfaceSelectReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const InterfaceSelectReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const InterfaceSelectReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void InterfaceSelectReq::MergeFrom(const InterfaceSelectReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_dssvrid()) {
      set_dssvrid(from.dssvrid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void InterfaceSelectReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InterfaceSelectReq::CopyFrom(const InterfaceSelectReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InterfaceSelectReq::IsInitialized() const {

  return true;
}

void InterfaceSelectReq::Swap(InterfaceSelectReq* other) {
  if (other != this) {
    std::swap(dssvrid_, other->dssvrid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata InterfaceSelectReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = InterfaceSelectReq_descriptor_;
  metadata.reflection = InterfaceSelectReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int InterfaceSelectAck::kCfgItemsFieldNumber;
#endif  // !_MSC_VER

InterfaceSelectAck::InterfaceSelectAck()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:InterfaceSelectAck)
}

void InterfaceSelectAck::InitAsDefaultInstance() {
}

InterfaceSelectAck::InterfaceSelectAck(const InterfaceSelectAck& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:InterfaceSelectAck)
}

void InterfaceSelectAck::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

InterfaceSelectAck::~InterfaceSelectAck() {
  // @@protoc_insertion_point(destructor:InterfaceSelectAck)
  SharedDtor();
}

void InterfaceSelectAck::SharedDtor() {
  if (this != default_instance_) {
  }
}

void InterfaceSelectAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InterfaceSelectAck::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return InterfaceSelectAck_descriptor_;
}

const InterfaceSelectAck& InterfaceSelectAck::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_DSMsg_2eproto();
  return *default_instance_;
}

InterfaceSelectAck* InterfaceSelectAck::default_instance_ = NULL;

InterfaceSelectAck* InterfaceSelectAck::New() const {
  return new InterfaceSelectAck;
}

void InterfaceSelectAck::Clear() {
  cfgitems_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool InterfaceSelectAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:InterfaceSelectAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .SysInterfaceStruct CfgItems = 2;
      case 2: {
        if (tag == 18) {
         parse_CfgItems:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_cfgitems()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_CfgItems;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:InterfaceSelectAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:InterfaceSelectAck)
  return false;
#undef DO_
}

void InterfaceSelectAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:InterfaceSelectAck)
  // repeated .SysInterfaceStruct CfgItems = 2;
  for (int i = 0; i < this->cfgitems_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->cfgitems(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:InterfaceSelectAck)
}

::google::protobuf::uint8* InterfaceSelectAck::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:InterfaceSelectAck)
  // repeated .SysInterfaceStruct CfgItems = 2;
  for (int i = 0; i < this->cfgitems_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->cfgitems(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:InterfaceSelectAck)
  return target;
}

int InterfaceSelectAck::ByteSize() const {
  int total_size = 0;

  // repeated .SysInterfaceStruct CfgItems = 2;
  total_size += 1 * this->cfgitems_size();
  for (int i = 0; i < this->cfgitems_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->cfgitems(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InterfaceSelectAck::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const InterfaceSelectAck* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const InterfaceSelectAck*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void InterfaceSelectAck::MergeFrom(const InterfaceSelectAck& from) {
  GOOGLE_CHECK_NE(&from, this);
  cfgitems_.MergeFrom(from.cfgitems_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void InterfaceSelectAck::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InterfaceSelectAck::CopyFrom(const InterfaceSelectAck& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InterfaceSelectAck::IsInitialized() const {

  return true;
}

void InterfaceSelectAck::Swap(InterfaceSelectAck* other) {
  if (other != this) {
    cfgitems_.Swap(&other->cfgitems_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata InterfaceSelectAck::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = InterfaceSelectAck_descriptor_;
  metadata.reflection = InterfaceSelectAck_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int InterfaceInsertReq::kCfgItemsFieldNumber;
#endif  // !_MSC_VER

InterfaceInsertReq::InterfaceInsertReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:InterfaceInsertReq)
}

void InterfaceInsertReq::InitAsDefaultInstance() {
}

InterfaceInsertReq::InterfaceInsertReq(const InterfaceInsertReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:InterfaceInsertReq)
}

void InterfaceInsertReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

InterfaceInsertReq::~InterfaceInsertReq() {
  // @@protoc_insertion_point(destructor:InterfaceInsertReq)
  SharedDtor();
}

void InterfaceInsertReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void InterfaceInsertReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InterfaceInsertReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return InterfaceInsertReq_descriptor_;
}

const InterfaceInsertReq& InterfaceInsertReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_DSMsg_2eproto();
  return *default_instance_;
}

InterfaceInsertReq* InterfaceInsertReq::default_instance_ = NULL;

InterfaceInsertReq* InterfaceInsertReq::New() const {
  return new InterfaceInsertReq;
}

void InterfaceInsertReq::Clear() {
  cfgitems_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool InterfaceInsertReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:InterfaceInsertReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .SysInterfaceStruct CfgItems = 2;
      case 2: {
        if (tag == 18) {
         parse_CfgItems:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_cfgitems()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_CfgItems;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:InterfaceInsertReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:InterfaceInsertReq)
  return false;
#undef DO_
}

void InterfaceInsertReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:InterfaceInsertReq)
  // repeated .SysInterfaceStruct CfgItems = 2;
  for (int i = 0; i < this->cfgitems_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->cfgitems(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:InterfaceInsertReq)
}

::google::protobuf::uint8* InterfaceInsertReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:InterfaceInsertReq)
  // repeated .SysInterfaceStruct CfgItems = 2;
  for (int i = 0; i < this->cfgitems_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->cfgitems(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:InterfaceInsertReq)
  return target;
}

int InterfaceInsertReq::ByteSize() const {
  int total_size = 0;

  // repeated .SysInterfaceStruct CfgItems = 2;
  total_size += 1 * this->cfgitems_size();
  for (int i = 0; i < this->cfgitems_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->cfgitems(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InterfaceInsertReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const InterfaceInsertReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const InterfaceInsertReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void InterfaceInsertReq::MergeFrom(const InterfaceInsertReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  cfgitems_.MergeFrom(from.cfgitems_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void InterfaceInsertReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InterfaceInsertReq::CopyFrom(const InterfaceInsertReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InterfaceInsertReq::IsInitialized() const {

  return true;
}

void InterfaceInsertReq::Swap(InterfaceInsertReq* other) {
  if (other != this) {
    cfgitems_.Swap(&other->cfgitems_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata InterfaceInsertReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = InterfaceInsertReq_descriptor_;
  metadata.reflection = InterfaceInsertReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int InterfaceInsertAck::kRetFieldNumber;
#endif  // !_MSC_VER

InterfaceInsertAck::InterfaceInsertAck()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:InterfaceInsertAck)
}

void InterfaceInsertAck::InitAsDefaultInstance() {
}

InterfaceInsertAck::InterfaceInsertAck(const InterfaceInsertAck& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:InterfaceInsertAck)
}

void InterfaceInsertAck::SharedCtor() {
  _cached_size_ = 0;
  ret_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

InterfaceInsertAck::~InterfaceInsertAck() {
  // @@protoc_insertion_point(destructor:InterfaceInsertAck)
  SharedDtor();
}

void InterfaceInsertAck::SharedDtor() {
  if (this != default_instance_) {
  }
}

void InterfaceInsertAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InterfaceInsertAck::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return InterfaceInsertAck_descriptor_;
}

const InterfaceInsertAck& InterfaceInsertAck::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_DSMsg_2eproto();
  return *default_instance_;
}

InterfaceInsertAck* InterfaceInsertAck::default_instance_ = NULL;

InterfaceInsertAck* InterfaceInsertAck::New() const {
  return new InterfaceInsertAck;
}

void InterfaceInsertAck::Clear() {
  ret_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool InterfaceInsertAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:InterfaceInsertAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 Ret = 2;
      case 2: {
        if (tag == 16) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_)));
          set_has_ret();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:InterfaceInsertAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:InterfaceInsertAck)
  return false;
#undef DO_
}

void InterfaceInsertAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:InterfaceInsertAck)
  // optional int32 Ret = 2;
  if (has_ret()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->ret(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:InterfaceInsertAck)
}

::google::protobuf::uint8* InterfaceInsertAck::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:InterfaceInsertAck)
  // optional int32 Ret = 2;
  if (has_ret()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->ret(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:InterfaceInsertAck)
  return target;
}

int InterfaceInsertAck::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 Ret = 2;
    if (has_ret()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ret());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InterfaceInsertAck::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const InterfaceInsertAck* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const InterfaceInsertAck*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void InterfaceInsertAck::MergeFrom(const InterfaceInsertAck& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ret()) {
      set_ret(from.ret());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void InterfaceInsertAck::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InterfaceInsertAck::CopyFrom(const InterfaceInsertAck& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InterfaceInsertAck::IsInitialized() const {

  return true;
}

void InterfaceInsertAck::Swap(InterfaceInsertAck* other) {
  if (other != this) {
    std::swap(ret_, other->ret_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata InterfaceInsertAck::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = InterfaceInsertAck_descriptor_;
  metadata.reflection = InterfaceInsertAck_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int InterfaceUpdateReq::kCfgItemsFieldNumber;
#endif  // !_MSC_VER

InterfaceUpdateReq::InterfaceUpdateReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:InterfaceUpdateReq)
}

void InterfaceUpdateReq::InitAsDefaultInstance() {
}

InterfaceUpdateReq::InterfaceUpdateReq(const InterfaceUpdateReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:InterfaceUpdateReq)
}

void InterfaceUpdateReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

InterfaceUpdateReq::~InterfaceUpdateReq() {
  // @@protoc_insertion_point(destructor:InterfaceUpdateReq)
  SharedDtor();
}

void InterfaceUpdateReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void InterfaceUpdateReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InterfaceUpdateReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return InterfaceUpdateReq_descriptor_;
}

const InterfaceUpdateReq& InterfaceUpdateReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_DSMsg_2eproto();
  return *default_instance_;
}

InterfaceUpdateReq* InterfaceUpdateReq::default_instance_ = NULL;

InterfaceUpdateReq* InterfaceUpdateReq::New() const {
  return new InterfaceUpdateReq;
}

void InterfaceUpdateReq::Clear() {
  cfgitems_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool InterfaceUpdateReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:InterfaceUpdateReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .SysInterfaceStruct CfgItems = 2;
      case 2: {
        if (tag == 18) {
         parse_CfgItems:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_cfgitems()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_CfgItems;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:InterfaceUpdateReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:InterfaceUpdateReq)
  return false;
#undef DO_
}

void InterfaceUpdateReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:InterfaceUpdateReq)
  // repeated .SysInterfaceStruct CfgItems = 2;
  for (int i = 0; i < this->cfgitems_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->cfgitems(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:InterfaceUpdateReq)
}

::google::protobuf::uint8* InterfaceUpdateReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:InterfaceUpdateReq)
  // repeated .SysInterfaceStruct CfgItems = 2;
  for (int i = 0; i < this->cfgitems_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->cfgitems(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:InterfaceUpdateReq)
  return target;
}

int InterfaceUpdateReq::ByteSize() const {
  int total_size = 0;

  // repeated .SysInterfaceStruct CfgItems = 2;
  total_size += 1 * this->cfgitems_size();
  for (int i = 0; i < this->cfgitems_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->cfgitems(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InterfaceUpdateReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const InterfaceUpdateReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const InterfaceUpdateReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void InterfaceUpdateReq::MergeFrom(const InterfaceUpdateReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  cfgitems_.MergeFrom(from.cfgitems_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void InterfaceUpdateReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InterfaceUpdateReq::CopyFrom(const InterfaceUpdateReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InterfaceUpdateReq::IsInitialized() const {

  return true;
}

void InterfaceUpdateReq::Swap(InterfaceUpdateReq* other) {
  if (other != this) {
    cfgitems_.Swap(&other->cfgitems_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata InterfaceUpdateReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = InterfaceUpdateReq_descriptor_;
  metadata.reflection = InterfaceUpdateReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int InterfaceUpdateAck::kRetFieldNumber;
#endif  // !_MSC_VER

InterfaceUpdateAck::InterfaceUpdateAck()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:InterfaceUpdateAck)
}

void InterfaceUpdateAck::InitAsDefaultInstance() {
}

InterfaceUpdateAck::InterfaceUpdateAck(const InterfaceUpdateAck& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:InterfaceUpdateAck)
}

void InterfaceUpdateAck::SharedCtor() {
  _cached_size_ = 0;
  ret_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

InterfaceUpdateAck::~InterfaceUpdateAck() {
  // @@protoc_insertion_point(destructor:InterfaceUpdateAck)
  SharedDtor();
}

void InterfaceUpdateAck::SharedDtor() {
  if (this != default_instance_) {
  }
}

void InterfaceUpdateAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InterfaceUpdateAck::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return InterfaceUpdateAck_descriptor_;
}

const InterfaceUpdateAck& InterfaceUpdateAck::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_DSMsg_2eproto();
  return *default_instance_;
}

InterfaceUpdateAck* InterfaceUpdateAck::default_instance_ = NULL;

InterfaceUpdateAck* InterfaceUpdateAck::New() const {
  return new InterfaceUpdateAck;
}

void InterfaceUpdateAck::Clear() {
  ret_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool InterfaceUpdateAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:InterfaceUpdateAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 Ret = 2;
      case 2: {
        if (tag == 16) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_)));
          set_has_ret();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:InterfaceUpdateAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:InterfaceUpdateAck)
  return false;
#undef DO_
}

void InterfaceUpdateAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:InterfaceUpdateAck)
  // optional int32 Ret = 2;
  if (has_ret()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->ret(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:InterfaceUpdateAck)
}

::google::protobuf::uint8* InterfaceUpdateAck::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:InterfaceUpdateAck)
  // optional int32 Ret = 2;
  if (has_ret()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->ret(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:InterfaceUpdateAck)
  return target;
}

int InterfaceUpdateAck::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 Ret = 2;
    if (has_ret()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ret());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InterfaceUpdateAck::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const InterfaceUpdateAck* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const InterfaceUpdateAck*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void InterfaceUpdateAck::MergeFrom(const InterfaceUpdateAck& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ret()) {
      set_ret(from.ret());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void InterfaceUpdateAck::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InterfaceUpdateAck::CopyFrom(const InterfaceUpdateAck& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InterfaceUpdateAck::IsInitialized() const {

  return true;
}

void InterfaceUpdateAck::Swap(InterfaceUpdateAck* other) {
  if (other != this) {
    std::swap(ret_, other->ret_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata InterfaceUpdateAck::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = InterfaceUpdateAck_descriptor_;
  metadata.reflection = InterfaceUpdateAck_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int InterfaceDeleteReq::kCfgItemsFieldNumber;
#endif  // !_MSC_VER

InterfaceDeleteReq::InterfaceDeleteReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:InterfaceDeleteReq)
}

void InterfaceDeleteReq::InitAsDefaultInstance() {
}

InterfaceDeleteReq::InterfaceDeleteReq(const InterfaceDeleteReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:InterfaceDeleteReq)
}

void InterfaceDeleteReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

InterfaceDeleteReq::~InterfaceDeleteReq() {
  // @@protoc_insertion_point(destructor:InterfaceDeleteReq)
  SharedDtor();
}

void InterfaceDeleteReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void InterfaceDeleteReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InterfaceDeleteReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return InterfaceDeleteReq_descriptor_;
}

const InterfaceDeleteReq& InterfaceDeleteReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_DSMsg_2eproto();
  return *default_instance_;
}

InterfaceDeleteReq* InterfaceDeleteReq::default_instance_ = NULL;

InterfaceDeleteReq* InterfaceDeleteReq::New() const {
  return new InterfaceDeleteReq;
}

void InterfaceDeleteReq::Clear() {
  cfgitems_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool InterfaceDeleteReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:InterfaceDeleteReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .SysInterfaceStruct CfgItems = 2;
      case 2: {
        if (tag == 18) {
         parse_CfgItems:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_cfgitems()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_CfgItems;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:InterfaceDeleteReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:InterfaceDeleteReq)
  return false;
#undef DO_
}

void InterfaceDeleteReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:InterfaceDeleteReq)
  // repeated .SysInterfaceStruct CfgItems = 2;
  for (int i = 0; i < this->cfgitems_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->cfgitems(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:InterfaceDeleteReq)
}

::google::protobuf::uint8* InterfaceDeleteReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:InterfaceDeleteReq)
  // repeated .SysInterfaceStruct CfgItems = 2;
  for (int i = 0; i < this->cfgitems_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->cfgitems(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:InterfaceDeleteReq)
  return target;
}

int InterfaceDeleteReq::ByteSize() const {
  int total_size = 0;

  // repeated .SysInterfaceStruct CfgItems = 2;
  total_size += 1 * this->cfgitems_size();
  for (int i = 0; i < this->cfgitems_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->cfgitems(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InterfaceDeleteReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const InterfaceDeleteReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const InterfaceDeleteReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void InterfaceDeleteReq::MergeFrom(const InterfaceDeleteReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  cfgitems_.MergeFrom(from.cfgitems_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void InterfaceDeleteReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InterfaceDeleteReq::CopyFrom(const InterfaceDeleteReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InterfaceDeleteReq::IsInitialized() const {

  return true;
}

void InterfaceDeleteReq::Swap(InterfaceDeleteReq* other) {
  if (other != this) {
    cfgitems_.Swap(&other->cfgitems_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata InterfaceDeleteReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = InterfaceDeleteReq_descriptor_;
  metadata.reflection = InterfaceDeleteReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int InterfaceDeleteAck::kRetFieldNumber;
#endif  // !_MSC_VER

InterfaceDeleteAck::InterfaceDeleteAck()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:InterfaceDeleteAck)
}

void InterfaceDeleteAck::InitAsDefaultInstance() {
}

InterfaceDeleteAck::InterfaceDeleteAck(const InterfaceDeleteAck& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:InterfaceDeleteAck)
}

void InterfaceDeleteAck::SharedCtor() {
  _cached_size_ = 0;
  ret_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

InterfaceDeleteAck::~InterfaceDeleteAck() {
  // @@protoc_insertion_point(destructor:InterfaceDeleteAck)
  SharedDtor();
}

void InterfaceDeleteAck::SharedDtor() {
  if (this != default_instance_) {
  }
}

void InterfaceDeleteAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InterfaceDeleteAck::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return InterfaceDeleteAck_descriptor_;
}

const InterfaceDeleteAck& InterfaceDeleteAck::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_DSMsg_2eproto();
  return *default_instance_;
}

InterfaceDeleteAck* InterfaceDeleteAck::default_instance_ = NULL;

InterfaceDeleteAck* InterfaceDeleteAck::New() const {
  return new InterfaceDeleteAck;
}

void InterfaceDeleteAck::Clear() {
  ret_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool InterfaceDeleteAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:InterfaceDeleteAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 Ret = 2;
      case 2: {
        if (tag == 16) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_)));
          set_has_ret();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:InterfaceDeleteAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:InterfaceDeleteAck)
  return false;
#undef DO_
}

void InterfaceDeleteAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:InterfaceDeleteAck)
  // optional int32 Ret = 2;
  if (has_ret()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->ret(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:InterfaceDeleteAck)
}

::google::protobuf::uint8* InterfaceDeleteAck::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:InterfaceDeleteAck)
  // optional int32 Ret = 2;
  if (has_ret()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->ret(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:InterfaceDeleteAck)
  return target;
}

int InterfaceDeleteAck::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 Ret = 2;
    if (has_ret()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ret());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InterfaceDeleteAck::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const InterfaceDeleteAck* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const InterfaceDeleteAck*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void InterfaceDeleteAck::MergeFrom(const InterfaceDeleteAck& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ret()) {
      set_ret(from.ret());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void InterfaceDeleteAck::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InterfaceDeleteAck::CopyFrom(const InterfaceDeleteAck& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InterfaceDeleteAck::IsInitialized() const {

  return true;
}

void InterfaceDeleteAck::Swap(InterfaceDeleteAck* other) {
  if (other != this) {
    std::swap(ret_, other->ret_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata InterfaceDeleteAck::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = InterfaceDeleteAck_descriptor_;
  metadata.reflection = InterfaceDeleteAck_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
